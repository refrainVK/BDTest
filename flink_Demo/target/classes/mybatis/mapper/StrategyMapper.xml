<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hello.springboot.dao.StrategyMapper">
  <resultMap id="BaseResultMap" type="com.hello.springboot.entity.Strategy">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="subcommand" jdbcType="VARCHAR" property="subcommand" />
    <result column="server_name" jdbcType="VARCHAR" property="serverName" />
    <result column="window_size" jdbcType="VARCHAR" property="windowSize" />
    <result column="launch_time" jdbcType="VARCHAR" property="launchTime" />
    <result column="offline_time" jdbcType="VARCHAR" property="offlineTime" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="punishment_period" jdbcType="VARCHAR" property="punishmentPeriod" />
    <result column="bak1" jdbcType="VARCHAR" property="bak1" />
    <result column="bak2" jdbcType="VARCHAR" property="bak2" />
    <result column="bak3" jdbcType="VARCHAR" property="bak3" />
    <result column="source_id" jdbcType="INTEGER" property="sourceId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, modify_time, `name`, `uid`, subcommand, `server_name`, window_size, 
    launch_time, offline_time, `owner`, `type`, `status`, punishment_period, bak1, bak2, 
    bak3, source_id
  </sql>
  <select id="selectByExample" parameterType="com.hello.springboot.entity.StrategyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from strategy
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from strategy
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hello.springboot.entity.StrategyExample">
    delete from strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hello.springboot.entity.Strategy">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into strategy (create_time, modify_time, `name`, 
      `uid`, subcommand, `server_name`, 
      window_size, launch_time, offline_time, 
      `owner`, `type`, `status`, 
      punishment_period, bak1, bak2, 
      bak3, source_id)
    values (#{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{uid,jdbcType=VARCHAR}, #{subcommand,jdbcType=VARCHAR}, #{serverName,jdbcType=VARCHAR}, 
      #{windowSize,jdbcType=VARCHAR}, #{launchTime,jdbcType=VARCHAR}, #{offlineTime,jdbcType=VARCHAR}, 
      #{owner,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{punishmentPeriod,jdbcType=VARCHAR}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, 
      #{bak3,jdbcType=VARCHAR}, #{sourceId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hello.springboot.entity.Strategy">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into strategy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="subcommand != null">
        subcommand,
      </if>
      <if test="serverName != null">
        `server_name`,
      </if>
      <if test="windowSize != null">
        window_size,
      </if>
      <if test="launchTime != null">
        launch_time,
      </if>
      <if test="offlineTime != null">
        offline_time,
      </if>
      <if test="owner != null">
        `owner`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="punishmentPeriod != null">
        punishment_period,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
      <if test="bak3 != null">
        bak3,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="subcommand != null">
        #{subcommand,jdbcType=VARCHAR},
      </if>
      <if test="serverName != null">
        #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="windowSize != null">
        #{windowSize,jdbcType=VARCHAR},
      </if>
      <if test="launchTime != null">
        #{launchTime,jdbcType=VARCHAR},
      </if>
      <if test="offlineTime != null">
        #{offlineTime,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="punishmentPeriod != null">
        #{punishmentPeriod,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hello.springboot.entity.StrategyExample" resultType="java.lang.Long">
    select count(*) from strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update strategy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.subcommand != null">
        subcommand = #{record.subcommand,jdbcType=VARCHAR},
      </if>
      <if test="record.serverName != null">
        `server_name` = #{record.serverName,jdbcType=VARCHAR},
      </if>
      <if test="record.windowSize != null">
        window_size = #{record.windowSize,jdbcType=VARCHAR},
      </if>
      <if test="record.launchTime != null">
        launch_time = #{record.launchTime,jdbcType=VARCHAR},
      </if>
      <if test="record.offlineTime != null">
        offline_time = #{record.offlineTime,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null">
        `owner` = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.punishmentPeriod != null">
        punishment_period = #{record.punishmentPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.bak1 != null">
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null">
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null">
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceId != null">
        source_id = #{record.sourceId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update strategy
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      `name` = #{record.name,jdbcType=VARCHAR},
      `uid` = #{record.uid,jdbcType=VARCHAR},
      subcommand = #{record.subcommand,jdbcType=VARCHAR},
      `server_name` = #{record.serverName,jdbcType=VARCHAR},
      window_size = #{record.windowSize,jdbcType=VARCHAR},
      launch_time = #{record.launchTime,jdbcType=VARCHAR},
      offline_time = #{record.offlineTime,jdbcType=VARCHAR},
      `owner` = #{record.owner,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      punishment_period = #{record.punishmentPeriod,jdbcType=VARCHAR},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=VARCHAR},
      source_id = #{record.sourceId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hello.springboot.entity.Strategy">
    update strategy
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="subcommand != null">
        subcommand = #{subcommand,jdbcType=VARCHAR},
      </if>
      <if test="serverName != null">
        `server_name` = #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="windowSize != null">
        window_size = #{windowSize,jdbcType=VARCHAR},
      </if>
      <if test="launchTime != null">
        launch_time = #{launchTime,jdbcType=VARCHAR},
      </if>
      <if test="offlineTime != null">
        offline_time = #{offlineTime,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        `owner` = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="punishmentPeriod != null">
        punishment_period = #{punishmentPeriod,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hello.springboot.entity.Strategy">
    update strategy
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      `name` = #{name,jdbcType=VARCHAR},
      `uid` = #{uid,jdbcType=VARCHAR},
      subcommand = #{subcommand,jdbcType=VARCHAR},
      `server_name` = #{serverName,jdbcType=VARCHAR},
      window_size = #{windowSize,jdbcType=VARCHAR},
      launch_time = #{launchTime,jdbcType=VARCHAR},
      offline_time = #{offlineTime,jdbcType=VARCHAR},
      `owner` = #{owner,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      punishment_period = #{punishmentPeriod,jdbcType=VARCHAR},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR},
      source_id = #{sourceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>